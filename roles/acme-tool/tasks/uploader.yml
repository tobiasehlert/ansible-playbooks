---
# tasks file for roles/acme-tool

- name: Ending for hosts that are missing letsencrypt_certs vars
  meta: end_host
  when: letsencrypt_certs is not defined

- stat:
    path: "{{ certificatedestination }}"
  register: certificatedestination_folder
- name: Create directory {{ certificatedestination }} if it does not exist
  file:
    path: "{{ certificatedestination }}"
    state: directory
    mode: '0755'
  when: certificatedestination_folder.stat.exists == false


- name: Uploading fullchain.pem to {{ certificatedestination }} as <domain>-fullchain.pem
  copy:
    src: "{{ tmp_letsencrypt_folder }}/{{ item }}/fullchain.pem"
    dest: "{{ certificatedestination }}/{{ item }}-fullchain.pem"
    owner: root
    group: root
    mode: '0644'
  with_items: "{{ letsencrypt_certs }}"

- name: Uploading privkey.pem to {{ certificatedestination }} as <domain>-privkey.pem
  copy:
    src: "{{ tmp_letsencrypt_folder }}/{{ item }}/privkey.pem"
    dest: "{{ certificatedestination }}/{{ item }}-privkey.pem"
    owner: root
    group: root
    mode: '0640'
  with_items: "{{ letsencrypt_certs }}"


- name: Create symlink for vmware /etc/vmware/ssl/rui.key
  file:
    src: "{{ certificatedestination }}/{{ vmware_esxi_servercert }}-privkey.pem"
    dest: "/etc/vmware/ssl/rui.key"
    state: link
  when: vmware_esxi_servercert|length > 0

- name: Create symlink for vmware /etc/vmware/ssl/rui.crt
  file:
    src: "{{ certificatedestination }}/{{ vmware_esxi_servercert }}-fullchain.pem"
    dest: "/etc/vmware/ssl/rui.crt"
    state: link
  when: vmware_esxi_servercert|length > 0

- name: Adjusting rights for vmware {{ vmware_esxi_servercert }}-privkey.pem
  file:
    path: "{{ certificatedestination }}/{{ vmware_esxi_servercert }}-privkey.pem"
    mode: u=r,g=,o=
- name: Adjusting rights for vmware {{ vmware_esxi_servercert }}-fullchain.pem
  file:
    path: "{{ certificatedestination }}/{{ vmware_esxi_servercert }}-fullchain.pem"
    mode: u=rw,g=r,o=r


- name: Reloading {{ letsencrypt_reload_app }} on targethost
  service:
    name: "{{ letsencrypt_reload_app }}"
    state: reloaded
  when: ( letsencrypt_reload_app == 'nginx' or
          letsencrypt_reload_app == 'httpd' or
          letsencrypt_reload_app == 'apache' )

- name: Restarting docker-compose on targethost
  shell:
    cmd: docker-compose restart
  args:
    chdir: "{{ dockercompose_projectsrc }}"
  when: letsencrypt_reload_app == 'docker-compose'

- name: Restarting vmware-esxi hostd on targethost
  shell:
    cmd: /etc/init.d/hostd restart
  when: letsencrypt_reload_app == 'vmware-esxi'
